buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.0.RELEASE")
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'
    }
}
plugins {
    id 'java'
    id "com.commercehub.gradle.plugin.avro-base" version "0.9.0"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.google.protobuf'

bootJar {
    baseName = 'ranker'
    version = '0.1.0'
}

repositories {
    mavenCentral()
    jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile ('org.springframework.kafka:spring-kafka:2.1.4.RELEASE')
    compile ('org.springframework.boot:spring-boot-autoconfigure:2.0.0.RELEASE')
    compile("org.springframework.boot:spring-boot-starter-actuator:2.0.0.RELEASE")
    compile ('org.lognet:grpc-spring-boot-starter:2.3.1')
    compile 'io.micrometer:micrometer-core:1.0.3'
    compile 'io.micrometer:micrometer-registry-prometheus:1.0.3'
    compile 'io.grpc:grpc-netty:1.11.0'
    compile 'io.grpc:grpc-protobuf:1.11.0'
    compile 'io.grpc:grpc-stub:1.11.0'
    compile ('org.apache.avro:avro:1.8.1')
    compile ("org.apache.hbase:hbase-client:1.4.3") {
        exclude module: 'slf4j-log4j12'
    }
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('com.jayway.jsonpath:json-path')
}

task generateAvro(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
    source("src/main/resources/avro")
    outputDir = file("build/generated/avro")
    fieldVisibility = "PRIVATE"
}

compileJava.source(generateAvro.outputs)

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.5.1-1"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.11.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}
